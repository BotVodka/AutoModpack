name: Build and create release
on: 
  workflow_dispatch:
    inputs:
      release:
        description: 'Release type'
        required: true
        type: choice
        options:
        - PreRelease
        - Release
      version:
        description: 'Version'
        required: true


permissions:
  write-all

jobs:

  typeSetPreRelease:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.release }} == PreRelease
    steps:
    - name: typeSet
      run: |
        echo "type_state=true" >> $GITHUB_ENV
      
  typeSetRelease:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.release }} == Release
    steps:
    - name: typeSet
      run: |
        echo "type_state=false" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Inputs
        shell: python
        run: |
          print("üìù Release type: ${{ github.event.inputs.release }}\nü¶ø Version: ${{ github.event.inputs.version }}");
            
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1
        
      - name: Setup jdk 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          distribution: 'temurin'
          
      - name: Make gradle wrapper executable
        run: chmod +x ./gradlew
        
      - name: Build
        run: ./gradlew build
        
      - name: Capture build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/
          
      - name: Create release/pre-release
        
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: ${{ env.type_state }}
          title: "AutoModpack ${{ github.event.inputs.version }}"
          files: |
            ./build/libs/*.jar
          
          

    
    
    
#   Create-prerelease:
#     runs-on: ubuntu-latest
    
#     if: ${{ github.event.inputs.release }} == PreRelease
#     steps:
#       - name: prerelease
#         uses: "marvinpinto/action-automatic-releases@latest"
#         with:
#           repo_token: "${{ secrets.GITHUB_TOKEN }}"
#           automatic_release_tag: "latest"
#           prerelease: true
#           title: "AutoModpack ${{ github.event.inputs.version }}"
#           files: |
#             ./build/libs/*.jar
      
#   Create-release:
#     runs-on: ubuntu-latest
    
#     if: ${{ github.event.inputs.release }} == Release
#     steps:
#       - name: release
#         uses: "marvinpinto/action-automatic-releases@latest"
#         with:
#           repo_token: "${{ secrets.GITHUB_TOKEN }}"
#           automatic_release_tag: "latest"
#           prerelease: false
#           title: "AutoModpack ${{ github.event.inputs.version }}"
#           files: |
#             ./build/libs/*.jar
